name: Update nuspec files

on:
  pull_request:
    types: [closed]
    branches:
      - main

concurrency:
  group: update-nuspec-files
  cancel-in-progress: true

jobs:
  # validate:
  #     if: true
  #     runs-on: ubuntu-latest
  #     outputs:
  #       RESULT: ${{ steps.validate.outputs.RESULT }}
  #     steps:
  #       - name: Validate
  #         id: validate
  #         run: |
  #           is_not_origin_of_action="$([[ ! "$GITHUB_HEAD_REF" == update-nuspec/* ]] && echo true || echo false)"
  #           RESULT="$([[ "$is_not_origin_of_action" == true ]] && echo true || echo false)"
  #           echo "RESULT=$RESULT" >> $GITHUB_OUTPUT
    
  update-nuspec-files:
    # needs: [validate]
    # if: needs.validate.outputs.RESULT == 'true'
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
    steps:
      - name: Setup env variables
        run: |
          TARGET_BRANCH_NAME="bot/update-nuspec"
          echo "TARGET_BRANCH_NAME=$TARGET_BRANCH_NAME" >> $GITHUB_ENV
      
      - uses: actions/checkout@v4

      - name: Setup git
        run: |
          git config --global user.name "GitHub Action"
          git config --global user.email "action@github.com"
          git fetch origin $TARGET_BRANCH_NAME:$TARGET_BRANCH_NAME
          IS_TARGET_BRANCH_EXISTS=$(git ls-remote --heads origin $TARGET_BRANCH_NAME | grep -q "refs/heads/$TARGET_BRANCH_NAME" && echo true || echo false)
          echo "IS_TARGET_BRANCH_EXISTS=$IS_TARGET_BRANCH_EXISTS" >> $GITHUB_ENV
          if [[ "$IS_TARGET_BRANCH_EXISTS" == "true" ]]; then
            git checkout $TARGET_BRANCH_NAME
            git reset --hard main
          else
            git checkout -b $TARGET_BRANCH_NAME
          fi

      - name: Setup dotnet
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: | 
            8.0.x
            7.0.x
            6.0.x 
      
      - name: Build
        run: dotnet build ./EncryptedConfigValue.sln --configuration Release

      - name: Update EncryptedConfigValue.Net.Module.nuspec
        shell: pwsh
        run: |
          pwsh ./Scripts/UpdateNuspec.ps1 -CsprojPath "./EncryptedConfigValue.Module/EncryptedConfigValue.Module.csproj" -NuspecPath "./EncryptedConfigValue.Module/EncryptedConfigValue.Net.Module.nuspec" -ReadmePath "./Readme.md"

      - name: Update EncryptedConfigValue.Net.AspNetCore.nuspec
        shell: pwsh
        run: |
          pwsh ./Scripts/UpdateNuspec.ps1 -CsprojPath "./EncryptedConfigValue.AspNetCore/EncryptedConfigValue.AspNetCore.csproj" -NuspecPath "./EncryptedConfigValue.AspNetCore/EncryptedConfigValue.Net.AspNetCore.nuspec" -ReadmePath "./Readme.md" -ExplicitDependenciesFromCsproj "./EncryptedConfigValue/EncryptedConfigValue.csproj"

      - name: Commit changes
        run: |
          git add --all .
          git commit -m "Update nuspec files"
          if [[ "$IS_TARGET_BRANCH_EXISTS" == "true" ]]; then
            git push --force origin $TARGET_BRANCH_NAME
          else
            git push --set-upstream origin $TARGET_BRANCH_NAME
          fi

      - name: Create Pull Request
        run: |
          pr_id=$(gh pr list --base main --head $TARGET_BRANCH_NAME --json number --jq '.[0].number')
          if [ -z "$pr_id" ]; then
            gh pr create -B main -H $TARGET_BRANCH_NAME --title 'Update nuspec files' --body "**⚠️ Attention: This Pull Request Will Initiate the Release Process! ⚠️**"
          else
            gh pr edit $pr_id --title 'Update nuspec files' --body "**⚠️ Attention: This Pull Request Will Initiate the Release Process! ⚠️**"
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
