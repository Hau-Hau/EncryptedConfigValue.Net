name: Release EncryptedConfigValue.Net.Module

on:
  workflow_dispatch:

concurrency:
  group: release

jobs:
  validate:
      runs-on: ubuntu-latest
      outputs:
        RESULT: ${{ steps.validate.outputs.RESULT }}
      steps:
        - uses: actions/checkout@v4

        - name: Setup git
          run: |
            git fetch origin main:main
            git checkout main

        - name: Validate
          id: validate
          run: |
            hash_current=$(git rev-parse HEAD)
            hash_of_last_release=$(git log --tags="EncryptedConfigValue.Net.Module/*" --simplify-by-decoration --pretty="format:%H %D" | grep 'EncryptedConfigValue.Net.Module/' | head -n 1 | awk '{print $1}')
            has_differences=$(git diff --quiet $hash_current:./.github/ $hash_of_last_release:./.github/ && echo false || echo true)
            RESULT="$([[ "$has_differences" == true ]] && echo true || echo false)"
            echo "RESULT=$RESULT" >> $GITHUB_OUTPUT
    
  test:
    needs: [validate]
    if: needs.validate.outputs.RESULT == 'true'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: ./.github/actions/setup-dotnet-action

      - name: Build
        run: dotnet build ./EncryptedConfigValue.sln --configuration Debug
      
      - name: Test
        run: dotnet test --no-restore --verbosity normal ./EncryptedConfigValue.Module.Test/EncryptedConfigValue.Module.Test.csproj

  update-nuspec:
    needs: [test]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup git
        run: |
          git config --global user.name "GitHub Action"
          git config --global user.email "action@github.com"
          git fetch origin main:main
          git checkout main          

      - uses: ./.github/actions/setup-dotnet-action
    
      - name: Build
        run: dotnet build ./EncryptedConfigValue.sln --configuration Release

      - name: Update EncryptedConfigValue.Net.Module.nuspec
        shell: pwsh
        run: |
          pwsh ./Scripts/UpdateNuspec.ps1 -CsprojPath "./EncryptedConfigValue.Module/EncryptedConfigValue.Module.csproj" -NuspecPath "./EncryptedConfigValue.Module/EncryptedConfigValue.Net.Module.nuspec" -ReadmePath "./Readme.md"

      - name: Commit nuspec file
        run: |
          git add ./EncryptedConfigValue.Module/EncryptedConfigValue.Net.Module.nuspec
          git commit -m "Update EncryptedConfigValue.Net.Module.nuspec"
      
      - name: Push changes
        run: git push origin main

  release-nuget:
    needs: [update-nuspec]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: ./.github/actions/setup-dotnet-action

      - name: Build
        run: dotnet build ./EncryptedConfigValue.sln --configuration Release
      
      - name: Pack
        run: dotnet pack

      - name: Push NuGet package
        run: |
          version=$(sed -n 's:.*<version>\(.*\)</version>.*:\1:p' ./EncryptedConfigValue.Module/EncryptedConfigValue.Net.Module.nuspec)
          echo "dotnet nuget push ./EncryptedConfigValue.Module/bin/Release/EncryptedConfigValue.Net.Module.$version.nupkg"
          # dotnet nuget push "./EncryptedConfigValue.Module/bin/Release/EncryptedConfigValue.Net.Module.$version.nupkg" --api-key ${{ secrets.NUGET_API_KEY }} -src https://api.nuget.org/v3/index.json


  # release-github:
  #   needs: [update-nuspec]
  #   runs-on: ubuntu-latest
  #   permissions:
  #     contents: write
  #     pull-requests: write
  #   steps:

        
  tag:
    needs: [release-nuget]
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
    steps:
      - uses: actions/checkout@v4
      - name: Tag
        shell: bash
        run: |
          version=$(sed -n 's:.*<version>\(.*\)</version>.*:\1:p' ./EncryptedConfigValue.Module/EncryptedConfigValue.Net.Module.nuspec)
          hash=$(sed -n 's:.*commit="\([^"]*\)".*:\1:p' ./EncryptedConfigValue.Module/EncryptedConfigValue.Net.Module.nuspec)
          git tag -a "EncryptedConfigValue.Net.Module/$version" -m "EncryptedConfigValue.Net.Module v$version" $hash